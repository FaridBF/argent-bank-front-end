---
swagger: '2.0'
info:
  description: Contains all available API endpoints in this codebase
  version: 1.0.0
  title: Bank Argent API documentation
  termsOfService: http://swagger.io/terms/
host: virtserver.swaggerhub.com
basePath: /BOURASFARID/OC-Project-13-API-Argent-Bank/1.0.0
schemes:
  - https
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '200':
          description: User successfully logged in
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: User successfully created
          schema:
            $ref: '#/definitions/UserCreatedResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      tags:
        - User Module
      summary: Fetch user profile
      description: API for fetching a user profile
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Successfully got user profile data
          schema:
            $ref: '#/definitions/UserProfileResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      tags:
        - User Module
      summary: Edit user profile
      description: API for updating a user profile
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      security:
        - Bearer: []
      responses:
        '200':
          description: Successfully updated user profile data
          schema:
            $ref: '#/definitions/UserProfileResponse'
        '400':
          description: Bad request. The query syntax is incorrect.
        '401':
          description: Unauthorized. Authentication is required to access the resource.
        '498':
          description: Token expired/invalid. The token has expired or is invalid.
  /user/accounts/{accountId}/transactions:
    get:
      tags:
        - User Transactions Module
      summary: User Account Transactions
      description: API for getting all transactions for the current month of a specific account
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          type: integer
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '400':
          description: Bad request. The query syntax is incorrect.
        '401':
          description: Unauthorized. Authentication is required to access the resource.
        '498':
          description: Token expired/invalid. The token has expired or is invalid.
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - User Transactions Module
      summary: Fetch details of a transaction
      description: API for getting a single transaction details
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          type: integer
        - name: transactionId
          in: path
          description: Transaction's ID
          required: true
          type: integer
      responses:
        '200':
          description: Transaction retrieved successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Bad request. The query syntax is incorrect.
        '401':
          description: Unauthorized. Authentication is required to access the resource.
        '498':
          description: Token expired/invalid. The token has expired or is invalid.
        '500':
          description: Internal Server Error
    delete:
      tags:
        - User Transactions Module
      summary: Delete a transaction
      description: API for delete a single transaction details
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          type: integer
        - name: transactionId
          in: path
          description: Transaction's ID
          required: true
          type: integer
      responses:
        '204':
          description: Transaction deleted successfully.
        '400':
          description: Bad request. The query syntax is incorrect.
        '401':
          description: Unauthorized. Authentication is required to access the resource.
        '498':
          description: Token expired/invalid. The token has expired or is invalid.
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}/category:
    post:
      tags:
        - User Transactions Module
      summary: Post a transaction's category
      description: API for creating a transaction's category
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          type: integer
        - name: transactionId
          in: path
          description: Transaction's ID
          required: true
          type: integer
        - in: body
          name: body
          description: Create transaction's informations
          required: true
          schema:
            $ref: '#/definitions/TransactionsPostCategory'
      responses:
        '200':
          description: Transaction's category created successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Bad request. The query syntax is incorrect.
        '401':
          description: Unauthorized. Authentication is required to access the resource.
        '498':
          description: Token expired/invalid. The token has expired or is invalid.
        '500':
          description: Internal Server Error
    patch:
      tags:
        - User Transactions Module
      summary: Update a transaction's category
      description: API for updating a transaction's category
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          type: integer
        - name: transactionId
          in: path
          description: Transaction's ID
          required: true
          type: integer
        - in: body
          name: body
          description: Update transaction's category
          required: true
          schema:
            $ref: '#/definitions/TransactionsUpdateCategory'
      responses:
        '200':
          description: Transaction's category updated successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Bad request. The query syntax is incorrect.
        '401':
          description: Unauthorized. Authentication is required to access the resource.
        '498':
          description: Token expired/invalid. The token has expired or is invalid.
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}/notes:
    post:
      tags:
        - User Transactions Module
      summary: Post transaction's notes
      description: API for creating transaction's notes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          type: integer
        - name: transactionId
          in: path
          description: Transaction's ID
          required: true
          type: integer
        - in: body
          name: body
          description: Created transaction's notes
          required: true
          schema:
            $ref: '#/definitions/TransactionsPostNotes'
      responses:
        '200':
          description: Transaction's notes created successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Bad request. The query syntax is incorrect.
        '401':
          description: Unauthorized. Authentication is required to access the resource.
        '498':
          description: Token expired/invalid. The token has expired or is invalid.
        '500':
          description: Internal Server Error
    patch:
      tags:
        - User Transactions Module
      summary: Update transaction's notes
      description: API for updating transaction's notes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          description: User's account ID
          required: true
          type: integer
        - name: transactionId
          in: path
          description: Transaction's ID
          required: true
          type: integer
        - in: body
          name: body
          description: Update transaction's notes
          required: true
          schema:
            $ref: '#/definitions/TransactionsUpdateNotes'
      responses:
        '200':
          description: Transaction's notes updated successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Bad request. The query syntax is incorrect.
        '401':
          description: Unauthorized. Authentication is required to access the resource.
        '498':
          description: Token expired/invalid. The token has expired or is invalid.
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  UserCreatedResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/UserCreatedResponse_body'
  UserProfileResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/UserProfileResponse_body'
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      transactionId:
        type: integer
        format: int64
      date:
        type: string
      description:
        type: string
      amount:
        type: number
      currency:
        type: string
      type:
        type: string
      category:
        type: string
      notes:
        type: string
  TransactionsPostCategory:
    type: object
    properties:
      category:
        type: string
  TransactionsPostNotes:
    type: object
    properties:
      notes:
        type: string
  TransactionsUpdateCategory:
    type: object
    properties:
      category:
        type: string
  TransactionsUpdateNotes:
    type: object
    properties:
      notes:
        type: string
  UserCreatedResponse_body:
    type: object
    properties:
      _id:
        type: string
      email:
        type: string
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      __v:
        type: integer
  UserProfileResponse_body:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
